name: CI/CD Pipeline  # Nome do workflow

on:
  push:
    branches:
      - main           
      - class_preparation  # Executa o pipeline quando há push na branch main
      - aula_06-03_demo
  pull_request:
    branches:
      - main           
      - class_preparation  # Executa apenas o CI em pull requests para a main
      - aula_06-03_demo

jobs:
  # ==========================
  # CI (Continuous Integration)
  # ==========================
  ci:
    name: 🛠️ Continuous Integration
    runs-on: ubuntu-latest  # Define o sistema operacional onde o job será executado

    steps:
      - name: 🛎️ Checkout do código
        uses: actions/checkout@v3  # Obtém o código do repositório

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.14'  # Define a versão do Python

      - name: 📦 Instalar dependências
        working-directory: ./login-app  # Define o diretório onde o requirements.txt está
        run: |
          python -m pip install --upgrade pip  # Atualiza o pip
          python -m pip install -r requirements.txt  # Instala as dependências diretamente

  # ==========================
  # CD (Continuous Deployment)
  # ==========================
  deploy:
    name: 🚀 Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci  # O deploy só acontece se o CI passar com sucesso

    steps:
      - name: 🛎️ Checkout do código
        uses: actions/checkout@v3  # Obtém o código do repositório

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'

      - name: 📦 Instalar dependências
        working-directory: ./login-app
        run: |
          python -m pip install --upgrade pip  # Atualiza o pip
          python -m pip install -r requirements.txt  # Instala as dependências diretamente

      - name: 🚀 Deploy (Personalizar)
        run: |
          echo "Executando o deploy..."
          # Aqui você pode adicionar comandos específicos de deploy, como:
          # git push heroku main
          # rsync -avz ./ servidor:/var/www/
